// Define color maps for Slack Integration
def COLOR_MAP = ['SUCCESS': 'good', 'FAILURE': 'danger', 'UNSTABLE': 'danger', 'ABORTED': 'danger']


def remote = [:]
    remote.name = 'tqs'
    remote.host = '13.94.238.109'
    remote.user = 'tqs'
    remote.password = 'TqsDeployment2019.'
    remote.allowAnyHosts = true
    
    
pipeline {
    agent any
    tools {
        jdk 'jdk8'
        maven 'mvn'
    }
    stages { 
        stage('Deploy') {
            steps {
                input 'Do you approve the deployment?'
                
                sh '''
                  cd CloudPlaces
                  mvn install
                '''                                    
                    //Send jar with dependencies
                    sshPut remote: remote, from: 'CloudPlaces/target/cloudplaces-1.0-SNAPSHOT.jar', into: './deploy'
                    
                    //Send Dockerfile
                    sshPut remote: remote, from: 'CloudPlaces/Dockerfile', into: './deploy'
                    
                    
                    // stop old containers and remove old images
                    sshCommand remote: remote, command: "docker stop cloudplaces || echo 'cloud places not stopped' ", sudo:true
                    sshCommand remote: remote, command: "docker rm cloudplaces || echo 'cloud places removed stopped'", sudo:true
                    sshCommand remote: remote, command: "docker rmi cloudplaces || echo 'cloud places image not stopped'", sudo:true
                    
                    sleep(time:3,unit:"SECONDS")
                    
                    // build new docker image
                    sshCommand remote: remote, command: "docker build -t cloudplaces ./deploy", sudo:true
                    
                    //run docker with deployment image as a deamon
                    sshCommand remote: remote, command: "docker run -d -p 8080:8080 --name cloudplaces -t cloudplaces ", sudo:true
                    
                    
                
                    //sshCommand remote: remote, command: "kill \$(lsof -i:8080 -t) || echo 'No process running on 8080'"
                    //sshCommand remote: remote, command: "ls -1"   
                    //sshCommand remote: remote, command: "sudo daemonize -E JENKINS_NODE_COOKIE=dontKillMe nohup java -jar cloudplaces-v1.0.jar &", sudo:true
                    //sshCommand remote: remote, command: "daemonize -E JENKINS_NODE_COOKIE=dontKillMe java -jar cloudplaces-v1.0.jar & "      
                    
            }
        }
    }
    post {
        always {
                slackSend (color: COLOR_MAP[currentBuild.currentResult], message: "Job: *${env.JOB_NAME}, build #${env.BUILD_NUMBER}* is *`${currentBuild.currentResult}`* \nRun in ${currentBuild.durationString} - <${env.BUILD_URL}|Open Build Logs>")
            }
        }
}

