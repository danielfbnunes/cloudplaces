// Define color maps for Slack Integration
def COLOR_MAP = ['SUCCESS': 'good', 'FAILURE': 'danger', 'UNSTABLE': 'danger', 'ABORTED': 'danger']


def remote = [:]
    remote.name = 'tqs'
    remote.host = '13.94.238.109'
    remote.user = 'tqs'
    remote.password = 'TqsDeployment2019.'
    remote.allowAnyHosts = true
    
    
pipeline {
    agent any
    tools {
        jdk 'jdk8'
        maven 'mvn'
    }
    stages { 
        stage('Deploy') {
            steps {
                input 'Do you approve the deployment?'
                
                sh '''
                  cd SpringBootOnDocker
                  mvn package
                '''                
                    //put jar on deployment server
                    sshPut remote: remote, from: 'SpringBootOnDocker/target/cloudplaces-v1.0.jar', into: '.'
                    sshPut remote: remote, from: 'SpringBootOnDocker/Dockerfile', into: '.'
                    sshPut remote: remote, from: 'SpringBootOnDocker/target/dependency', into: '.'
                    sshCommand remote: remote, command: "docker build -t docker/cloudplaces ."
                    sshCommand remote: remote, command: "docker run -d -p 8080:8080 --name cloudplaces -t docker/cloudplaces "
                    
                    
                
                    // stop any process running on 8080 (IP tables forward traffic from port 80 to 8080
                    //sshCommand remote: remote, command: "kill \$(lsof -i:8080 -t) || echo 'No process running on 8080'"
                
                    // run jar
                    //sshCommand remote: remote, command: "ls -1"   
                    
                    //sshCommand remote: remote, command: "sudo daemonize -E JENKINS_NODE_COOKIE=dontKillMe nohup java -jar cloudplaces-v1.0.jar &", sudo:true
                    
                    // run jar
                    //sshCommand remote: remote, command: "daemonize -E JENKINS_NODE_COOKIE=dontKillMe java -jar cloudplaces-v1.0.jar & "      
                    
                    
                   
                    
                     
            
            }
        }
        
        
        
    }
    post {
        always {
                slackSend (color: COLOR_MAP[currentBuild.currentResult], message: "Job: *${env.JOB_NAME}, build #${env.BUILD_NUMBER}* is *`${currentBuild.currentResult}`* \nRun in ${currentBuild.durationString} - <${env.BUILD_URL}|Open Build Logs>")
            }
        }
}

