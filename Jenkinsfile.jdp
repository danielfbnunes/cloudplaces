// Define color maps for Slack Integration
def COLOR_MAP = ['SUCCESS': 'good', 'FAILURE': 'danger', 'UNSTABLE': 'danger', 'ABORTED': 'danger']


def remote = [:]
    remote.name = 'tqs'
    remote.host = '192.168.160.45'
    remote.user = 'tqs'
    remote.password = 'gofo.zuva.17'
    remote.allowAnyHosts = true


pipeline {
    agent any
    tools {
        jdk 'jdk8'
        maven 'mvn'
    }
    stages {
        stage('Slack - Build Started Feedback') {
            steps {
                //Send message to Slack informing that the Build is Starting
                slackSend (message: "*Build Started* - ${env.JOB_NAME} *#${env.BUILD_NUMBER}* (<${env.BUILD_URL}|Open Build Logs>)")
            }
        }
        
        

        stage('Android Testing') {
            steps {
                   sshPut remote: remote, from: 'CloudPlacesAndroidApp/.', into: '.'
                   //sshCommand remote: remote, command: "cd ~/CloudPlacesAndroidApp/ && gradle  wrapper --gradle-version 5.1.1"
                   
                   
                   //sshCommand remote: remote, command: "cd CloudPlacesAndroidApp/ && sudo chmod 777 ./gradle"
                   sshCommand remote: remote, command: "chmod -R 777 CloudPlacesAndroidApp/", sudo:true
                   sshCommand remote: remote, command: "cd CloudPlacesAndroidApp/ && ./gradlew testDebugUnitTest"
            }
        }
    }
    post {
        always {
                slackSend (color: COLOR_MAP[currentBuild.currentResult], message: "Job: *${env.JOB_NAME}, build #${env.BUILD_NUMBER}* is *`${currentBuild.currentResult}`* \nRun in ${currentBuild.durationString} - <${env.BUILD_URL}|Open Build Logs>")
            }
        }
}
